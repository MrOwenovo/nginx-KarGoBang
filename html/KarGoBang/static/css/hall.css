.container-hall{
    z-index: 100;
    position: absolute;
    margin-left: 70%;
    /* 弹性布局 水平垂直居中 */
    display: flex;
    justify-content: center;
    align-items: center;
    width: 300px;
    height: 100px;
}
.redo{
    top: -60%;
    left: 87%;
    width: 15px;
    height: 15px;
    position: absolute;
    background-image: url('../images/redo.png');
    background-size: cover;
}

.card-user{
    /* 绝对定位 */
    position: absolute;
    background-color: #fff;
    width: 215px;
    height: 50px;
    /* 弹性布局 */
    display: flex;
    /* 将元素靠边对齐 */
    justify-content: space-between;
    align-items: center;
    padding: 0 20px;
    border-radius: 100px 20px 20px 100px;
    opacity: 0;
    /* 执行动画:动画名称 时长 线性的 无限次播放 */
    animation: animate 15s linear infinite;
    /* 这里我们需要给每一个卡片设置一个不同的动画延迟时间 */
    /* 用到自定义属性,我们设置一个自定义属性--d */
    /* 通过var函数调用自定义属性--d,计算出动画延迟时间 */
    animation-delay:  calc(3s * var(--d));

}
/* 鼠标移入,动画暂停 */
.container-hall:hover .card-user{
    animation-play-state: paused;
}

.card-user .content-hall{
    display: flex;
    align-items: center;
}

.card-user .img-hall{
    width: 38px;
    height: 38px;
    position: absolute;
    left: 0;
    top: 0;
    background-color: #fff;
    padding: 5px;
    border-radius: 50%;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
}
.card-user .img-hall img{
    width: 100%;
    height: 100%;
    /* 对图片进行剪切,保留原始比例 */
    object-fit: cover;
    border-radius: 50%;
}

.card-user .detail{
    margin-left: 40px;

}

.card-user .detail span{
    display: block;
    font-size: 3px;
    font-weight: bold;
    margin-bottom: 3px;
    margin-top: 5px;
    /*margin-right: 20px;*/
}
.card-user .detail p{
    display: block;
    font-size: 1px;
    font-weight: 500;
    margin-bottom: 4px;
    /*margin-right: 20px;*/

}

.card-user a{
    margin-left: 20px;
    font-size: 1px;
    text-decoration: none;
    background: linear-gradient(to bottom,#fbc5ed,#a6c1ee);
    padding: 3px 6px;
    color: #fff;
    border-radius: 25px;
}

/* 定义动画 */
@keyframes animate{
    0%{
        opacity: 0;
        transform: translateY(100%) scale(0.5);
    }
    5%,20%{
        opacity: 0.4;
        transform: translateY(100%) scale(0.7);
    }
    25%,40%{
        opacity: 1;
        transform: translateY(0%) scale(1);
    }
    45%,60%{
        opacity: 0.4;
        transform: translateY(-100%) scale(0.7);
    }
    65%,100%{
        opacity: 0;
        transform: translateY(-100%) scale(0.5);
    }
}